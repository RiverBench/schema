on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  package:
    name: "Make a pre-release"
    runs-on: "ubuntu-latest"
    permissions: write-all
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          path: schema

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - run: |
          pip install -r schema/requirements.txt
          mkdir release doc_temp doc_out

      - name: "Package schema"
        uses: docker://ghcr.io/riverbench/ci-worker:main
        with:
          args: ci-worker package-schema dev schema release doc_temp

      - name: "Generate docs with PyLODE"
        run: |
          python -m pylode.cli -i doc_temp/metadata.ttl -c false -o doc_temp/metadata.md -f md
          python -m pylode.cli -i doc_temp/documentation.ttl -c false -o doc_temp/documentation.md -f md
          python -m pylode.cli -p vocpub -i doc_temp/theme.ttl -c false -o doc_temp/theme.md -f md

      - name: "Post-process the docs"
        uses: docker://ghcr.io/riverbench/ci-worker:main
        with:
          args: ci-worker schema-doc-gen dev doc_temp doc_out

      - name: "Package docs"
        run: tar -czf release/docs.tar.gz -C doc_out .

      - name: Upload files for the release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          prerelease: true
          draft: false
          omitDraftDuringUpdate: false
          makeLatest: false
          tag: "dev"
          name: "Development pre-release"
          artifacts: 'release/*'
          removeArtifacts: true
          generateReleaseNotes: true

  trigger-doc-update:
    needs: package
    name: "Trigger documentation update"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Trigger repository_dispatch"
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_DOC_REPO_HOOKS }}
          repository: RiverBench/riverbench.github.io
          event-type: schema-doc-update
          client-payload: '{ "tag": "dev" }'
